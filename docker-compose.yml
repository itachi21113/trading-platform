services:
  # --- Infrastructure Services ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  db:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=trading_db
    ports:
      - "5432:5432"
    volumes:
      - trading_db_data:/var/lib/postgresql/data

  # --- Application Services ---
  price-producer:
    build: ./services/price-producer
    container_name: price-producer
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092

  ml-service:
    build: ./services/ml-service
    container_name: ml-service
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=trading_db
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "8000:8000"

  price-streamer:
    build: ./services/price-streamer
    container_name: price-streamer
    depends_on:
      - kafka
      - db
      - ml-service
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/trading_db
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - ML_SERVICE_URL=http://ml-service:8000
      # Auth0 configuration (replace with your actual values)
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=https://dev-ic7b0akl6h55q8wb.us.auth0.com/
    ports:
      - "8081:8081"

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "80:80" # Maps the container's port 80 to your machine's port 80

volumes:
  trading_db_data: